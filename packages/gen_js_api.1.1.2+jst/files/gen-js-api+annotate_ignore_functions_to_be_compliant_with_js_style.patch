--- a//dev/null
+++ b/examples/test_mis_interaction_with_js_style/jbuild
@@ -0,0 +1,15 @@
+(executables (
+  (names (main))
+  (libraries (gen_js_api))
+  (preprocess (pps (gen_js_api.ppx ppx_jane)))
+  (skip_from_default true)
+  (skip_from_executables_alias true)
+  (js_of_ocaml ())
+  (extension_universe no_extensions)))
+
+(alias (
+  (name DEFAULT)
+  (deps (main.bc.js))))
+
+(enforce_style disabled)
+(mlis_are_mandatory ((enabled false)))
--- a//dev/null
+++ b/examples/test_mis_interaction_with_js_style/main.ml
@@ -0,0 +1,9 @@
+open Gen_js_api
+
+type t = Ojs.t [@@js]
+ 
+include [%js: val make : pattern:string -> ?flags:string -> unit -> t [@@js.new "RegExp"]]
+ 
+let create ?flags pattern = make ~pattern ?flags ()
+
+let _ : _ = create
--- a//dev/null
+++ b/examples/test_mis_interaction_with_js_style/main.mli
@@ -0,0 +1 @@
+(*_ Intentionally left empty. *)
--- a/ppx-lib/gen_js_api_ppx.ml
+++ b/ppx-lib/gen_js_api_ppx.ml
@@ -869,7 +869,7 @@ let app f args unit_arg =
   apply f args
 
 let exp_ignore res =
-  apply (var "ignore") [ Nolabel, res ]
+  apply (Exp.constraint_ (var "ignore") (Typ.any ())) [ Nolabel, res ]
 let split sep s =
   let n = String.length s in
   let rec aux start i =
