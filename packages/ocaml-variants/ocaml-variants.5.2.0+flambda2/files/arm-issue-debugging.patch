From 03c8aa76efeb189e46110c492e07c85494405f66 Mon Sep 17 00:00:00 2001
From: Xavier Clerc <xclerc@users.noreply.github.com>
Date: Wed, 23 Apr 2025 12:54:52 +0100
Subject: [PATCH] Change unreachable `assert` to `Misc.fatal_errorf` (debugging
 arm issue) (#3917)

---
 driver/compenv.ml  |  2 +-
 utils/warnings.ml  | 13 +++++++++----
 utils/warnings.mli |  2 ++
 3 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/driver/compenv.ml b/driver/compenv.ml
index 9b69742127c..52a5b12804e 100644
--- a/driver/compenv.ml
+++ b/driver/compenv.ml
@@ -500,10 +500,10 @@ let read_one_param ppf position name v =
         name
     end
 
-
 let read_OCAMLPARAM ppf position =
   try
     let s = Sys.getenv "OCAMLPARAM" in
+    Warnings.parsed_ocamlparam := s;
     if s <> "" then
       let (before, after) =
         try
diff --git a/utils/warnings.ml b/utils/warnings.ml
index 66237c1fe01..122e95eabd6 100644
--- a/utils/warnings.ml
+++ b/utils/warnings.ml
@@ -611,7 +611,10 @@ let name_to_number =
 
 (* Must be the max number returned by the [number] function. *)
 
-let letter = function
+let parsed_ocamlparam = ref "<not-set>"
+
+(* CR-soon xclerc for xclerc: remove the `for_debug` parameter... *)
+let letter for_debug = function
   | 'a' ->
      let rec loop i = if i = 0 then [] else i :: loop (i - 1) in
      loop last_warning_number
@@ -640,7 +643,9 @@ let letter = function
   | 'x' -> [14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; 30]
   | 'y' -> [26]
   | 'z' -> [27]
-  | _ -> assert false
+  | chr ->
+    let ocamlparam_from_env = match Sys.getenv_opt "OCAMLPARAM" with None -> "-" | Some  value -> value in
+    Misc.fatal_errorf "Warnings.letter %C (for_debug=%S, ocamlparam_from_env=%S ocamlparam_from_compenv=%S)" chr for_debug ocamlparam_from_env !parsed_ocamlparam
 
 type state =
   {
@@ -899,7 +904,7 @@ let parse_opt error active errflag s =
           | None -> if c = lc then Clear else Set
           | Some m -> m
         in
-        List.iter (action modifier) (letter lc)
+        List.iter (action modifier) (letter s lc)
     | Num(n1,n2,modifier) ->
         for n = n1 to Misc.Stdlib.Int.min n2 last_warning_number do action modifier n done
   in
@@ -1343,7 +1348,7 @@ let help_warnings () =
   print_endline "  A all warnings";
   for i = Char.code 'b' to Char.code 'z' do
     let c = Char.chr i in
-    match letter c with
+    match letter "<help-warnings>" c with
     | [] -> ()
     | [n] ->
         Printf.printf "  %c Alias for warning %i.\n" (Char.uppercase_ascii c) n
diff --git a/utils/warnings.mli b/utils/warnings.mli
index 71d8c676b19..2a012ca3cf7 100644
--- a/utils/warnings.mli
+++ b/utils/warnings.mli
@@ -188,3 +188,5 @@ type description =
     since : Sys.ocaml_release_info option; }
 
 val descriptions : description list
+
+val parsed_ocamlparam : string ref
\ No newline at end of file