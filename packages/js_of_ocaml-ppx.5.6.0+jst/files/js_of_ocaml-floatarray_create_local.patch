--- a/runtime/array.js
+++ b/runtime/array.js
@@ -141,6 +141,12 @@
   return b;
 }
 
+//Provides: caml_floatarray_create_local const (const)
+//Requires: caml_floatarray_create
+function caml_floatarray_create_local(x) {
+  return caml_floatarray_create(x);
+}
+
 // Provides: caml_iarray_of_array const
 function caml_iarray_of_array(a) {
   return a;
--- a/runtime/wasm/array.wat
+++ b/runtime/wasm/array.wat
@@ -52,6 +52,7 @@
       (local.get $b))
 
    (export "caml_make_float_vect" (func $caml_floatarray_create))
+   (export "caml_floatarray_create_local" (func $caml_floatarray_create))
    (func $caml_floatarray_create (export "caml_floatarray_create")
       (param $n (ref eq)) (result (ref eq))
       (local $sz i32)
@@ -64,6 +65,7 @@
       (if (i32.eqz (local.get $sz)) (then (return (global.get $empty_array))))
       (array.new $float_array (f64.const 0) (local.get $sz)))
 
+
    (func (export "caml_floatarray_unsafe_get")
       (param $a (ref eq)) (param $i (ref eq)) (result (ref eq))
       (struct.new $float
