--- a/src/gen/gen_ast_pattern.ml
+++ b/src/gen/gen_ast_pattern.ml
@@ -34,7 +34,9 @@ let gen_combinator_for_constructor ?wrap
           | [ x ] -> Some (pvar x)
           | _ -> Some (Pat.tuple (List.map args ~f:pvar)))
       in
-      let exp, _ = apply_parsers funcs (List.map args ~f:evar) cd_args in
+      let exp, _ = apply_parsers funcs (List.map args ~f:evar)
+                     (List.map cd_args ~f:(fun ca -> ca.pca_type))
+      in
       let expected = without_prefix ~prefix cd.pcd_name.txt in
       let body =
         M.expr
@@ -98,7 +100,9 @@ let gen_combinator_for_record path ~pref
   in
   let body =
     List.fold_right funcs ~init:body ~f:(fun func acc ->
-        Exp.fun_ (Labelled func) None (M.patt "T %a" A.patt (pvar func)) acc)
+      Ppxlib_jane.Ast_builder.Default.add_fun_param
+        ~loc:!Ast_helper.default_loc
+        (Labelled func) None (M.patt "T %a" A.patt (pvar func)) acc)
   in
   M.stri "let %a = %a" A.patt (pvar (function_name_of_path path)) A.expr body
 
